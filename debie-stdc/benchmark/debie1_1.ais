# configure compiler
compiler "patmos-llvm";

#context specification
interproc flexible, max-length = inf, max-unroll = inf, default-unroll = 2;

cache instruction size = 4096, associativity = 4, line-size = 32, policy = LRU, may = chaos;

cache data size=2048, associativity=4, line-size=32,policy=LRU, may=chaos; # PML machine configuration
area 0x00000000 .. 0xffffffff access code read transfer-time = [22,1]; # PML machine configuration
area 0x00000000 .. 0xffffffff access data read transfer-time = [22,1], data write time = 5; # PML machine configuration

instruction ".LBB43_2" + 16 bytes branches to ".LBB43_6", ".LBB43_5", ".LBB43_4", ".LBB43_3"; # jumptable (source: llvm)
instruction ".LBB55_9" + 16 bytes branches to ".LBB55_17", ".LBB55_14", ".LBB55_10", ".LBB55_11", ".LBB55_13"; # jumptable (source: llvm)
instruction ".LBB60_4" + 16 bytes branches to ".LBB60_11", ".LBB60_12", ".LBB60_18", ".LBB60_14", ".LBB60_17"; # jumptable (source: llvm)
instruction ".LBB37_2" + 16 bytes branches to ".LBB37_3", ".LBB37_4", ".LBB37_5", ".LBB37_6"; # jumptable (source: llvm)
instruction ".LBB22_1" + 16 bytes branches to ".LBB22_2", ".LBB22_6", ".LBB22_8", ".LBB22_10", ".LBB22_13", ".LBB22_14", ".LBB22_16", ".LBB22_19", ".LBB22_24", ".LBB22_22"; # jumptable (source: llvm)
instruction ".LBB58_5" + 16 bytes branches to ".LBB58_6", ".LBB58_22", ".LBB58_21", ".LBB58_25", ".LBB58_26"; # jumptable (source: llvm)
instruction ".LBB25_2" + 16 bytes branches to ".LBB25_3", ".LBB25_6", ".LBB25_7", ".LBB25_8", ".LBB25_9", ".LBB25_10", ".LBB25_11"; # jumptable (source: llvm)
instruction ".LBB57_1" + 16 bytes branches to ".LBB57_18", ".LBB57_46", ".LBB57_19", ".LBB57_20", ".LBB57_21", ".LBB57_23", ".LBB57_25", ".LBB57_28", ".LBB57_3", ".LBB57_30", ".LBB57_31", ".LBB57_32", ".LBB57_8", ".LBB57_9", ".LBB57_10", ".LBB57_11", ".LBB57_12", ".LBB57_13", ".LBB57_14", ".LBB57_15", ".LBB57_16", ".LBB57_17", ".LBB57_33", ".LBB57_34", ".LBB57_35", ".LBB57_36", ".LBB57_37", ".LBB57_38", ".LBB57_39", ".LBB57_40", ".LBB57_41", ".LBB57_2"; # jumptable (source: llvm)
instruction ".LBB36_2" + 16 bytes branches to ".LBB36_3", ".LBB36_4", ".LBB36_5", ".LBB36_6"; # jumptable (source: llvm)

# input constraints
# initialize TC_look_up[] according to InitTC_LookUp()
# (these values were taken from the mpc55xx debie annotations)
# NOTE: they do not impact the WCET bound, neither on mpc55xx
ais2 { routine "TC_InterruptService" {
         enter with:
#         	mem(address("TC_look_up") + 0, 1) = 0x0,
#			mem(address("TC_look_up") + 1, 1) = 0x0;
mem(address("TC_look_up") + 0, 1)    = 0x0,
mem(address("TC_look_up") + 1, 1)    = 0x2,
mem(address("TC_look_up") + 2, 1)    = 0x2,
mem(address("TC_look_up") + 3, 1)    = 0x2,
mem(address("TC_look_up") + 4, 1)    = 0x0,
mem(address("TC_look_up") + 5, 1)    = 0x4,
mem(address("TC_look_up") + 6, 1)    = 0x2,
mem(address("TC_look_up") + 7, 1)    = 0x0,
mem(address("TC_look_up") + 8, 1)    = 0x0,
mem(address("TC_look_up") + 9, 1)    = 0x2,
mem(address("TC_look_up") + 10, 1)   = 0x2,
mem(address("TC_look_up") + 11, 1)   = 0x2,
mem(address("TC_look_up") + 12, 1)   = 0x1,
mem(address("TC_look_up") + 13, 1)   = 0x1,
mem(address("TC_look_up") + 14, 1)   = 0x1,
mem(address("TC_look_up") + 15, 1)   = 0x1,
mem(address("TC_look_up") + 16, 1)   = 0x1,
mem(address("TC_look_up") + 17, 1)   = 0x0,
mem(address("TC_look_up") + 18, 1)   = 0x0,
mem(address("TC_look_up") + 19, 1)   = 0x0,
mem(address("TC_look_up") + 20, 1)   = 0x0,
mem(address("TC_look_up") + 21, 1)   = 0x1,
mem(address("TC_look_up") + 22, 1)   = 0x0,
mem(address("TC_look_up") + 23, 1)   = 0x0,
mem(address("TC_look_up") + 24, 1)   = 0x0,
mem(address("TC_look_up") + 25, 1)   = 0x0,
mem(address("TC_look_up") + 26, 1)   = 0x0,
mem(address("TC_look_up") + 27, 1)   = 0x0,
mem(address("TC_look_up") + 28, 1)   = 0x0,
mem(address("TC_look_up") + 29, 1)   = 0x0,
mem(address("TC_look_up") + 30, 1)   = 0x0,
mem(address("TC_look_up") + 31, 1)   = 0x1,
mem(address("TC_look_up") + 32, 1)   = 0x3,
mem(address("TC_look_up") + 33, 1)   = 0x1,
mem(address("TC_look_up") + 34, 1)   = 0x1,
mem(address("TC_look_up") + 35, 1)   = 0x1,
mem(address("TC_look_up") + 36, 1)   = 0x1,
mem(address("TC_look_up") + 37, 1)   = 0x1,
mem(address("TC_look_up") + 38, 1)   = 0x1,
mem(address("TC_look_up") + 39, 1)   = 0x1,
mem(address("TC_look_up") + 40, 1)   = 0x1,
mem(address("TC_look_up") + 41, 1)   = 0x1,
mem(address("TC_look_up") + 42, 1)   = 0x1,
mem(address("TC_look_up") + 43, 1)   = 0x1,
mem(address("TC_look_up") + 44, 1)   = 0x1,
mem(address("TC_look_up") + 45, 1)   = 0x1,
mem(address("TC_look_up") + 46, 1)   = 0x0,
mem(address("TC_look_up") + 47, 1)   = 0x0,
mem(address("TC_look_up") + 48, 1)   = 0x3,
mem(address("TC_look_up") + 49, 1)   = 0x1,
mem(address("TC_look_up") + 50, 1)   = 0x1,
mem(address("TC_look_up") + 51, 1)   = 0x1,
mem(address("TC_look_up") + 52, 1)   = 0x1,
mem(address("TC_look_up") + 53, 1)   = 0x1,
mem(address("TC_look_up") + 54, 1)   = 0x1,
mem(address("TC_look_up") + 55, 1)   = 0x1,
mem(address("TC_look_up") + 56, 1)   = 0x1,
mem(address("TC_look_up") + 57, 1)   = 0x1,
mem(address("TC_look_up") + 58, 1)   = 0x1,
mem(address("TC_look_up") + 59, 1)   = 0x1,
mem(address("TC_look_up") + 60, 1)   = 0x1,
mem(address("TC_look_up") + 61, 1)   = 0x1,
mem(address("TC_look_up") + 62, 1)   = 0x0,
mem(address("TC_look_up") + 63, 1)   = 0x0,
mem(address("TC_look_up") + 64, 1)   = 0x3,
mem(address("TC_look_up") + 65, 1)   = 0x1,
mem(address("TC_look_up") + 66, 1)   = 0x1,
mem(address("TC_look_up") + 67, 1)   = 0x1,
mem(address("TC_look_up") + 68, 1)   = 0x1,
mem(address("TC_look_up") + 69, 1)   = 0x1,
mem(address("TC_look_up") + 70, 1)   = 0x1,
mem(address("TC_look_up") + 71, 1)   = 0x1,
mem(address("TC_look_up") + 72, 1)   = 0x1,
mem(address("TC_look_up") + 73, 1)   = 0x1,
mem(address("TC_look_up") + 74, 1)   = 0x1,
mem(address("TC_look_up") + 75, 1)   = 0x1,
mem(address("TC_look_up") + 76, 1)   = 0x1,
mem(address("TC_look_up") + 77, 1)   = 0x1,
mem(address("TC_look_up") + 78, 1)   = 0x0,
mem(address("TC_look_up") + 79, 1)   = 0x0,
mem(address("TC_look_up") + 80, 1)   = 0x3,
mem(address("TC_look_up") + 81, 1)   = 0x1,
mem(address("TC_look_up") + 82, 1)   = 0x1,
mem(address("TC_look_up") + 83, 1)   = 0x1,
mem(address("TC_look_up") + 84, 1)   = 0x1,
mem(address("TC_look_up") + 85, 1)   = 0x1,
mem(address("TC_look_up") + 86, 1)   = 0x1,
mem(address("TC_look_up") + 87, 1)   = 0x1,
mem(address("TC_look_up") + 88, 1)   = 0x1,
mem(address("TC_look_up") + 89, 1)   = 0x1,
mem(address("TC_look_up") + 90, 1)   = 0x1,
mem(address("TC_look_up") + 91, 1)   = 0x1,
mem(address("TC_look_up") + 92, 1)   = 0x1,
mem(address("TC_look_up") + 93, 1)   = 0x1,
mem(address("TC_look_up") + 94, 1)   = 0x0,
mem(address("TC_look_up") + 95, 1)   = 0x0,
mem(address("TC_look_up") + 96, 1)   = 0x1,
mem(address("TC_look_up") + 97, 1)   = 0x0,
mem(address("TC_look_up") + 98, 1)   = 0x0,
mem(address("TC_look_up") + 99, 1)   = 0x0,
mem(address("TC_look_up") + 100, 1)  = 0x0,
mem(address("TC_look_up") + 101, 1)  = 0x0,
mem(address("TC_look_up") + 102, 1)  = 0x0,
mem(address("TC_look_up") + 103, 1)  = 0x0,
mem(address("TC_look_up") + 104, 1)  = 0x0,
mem(address("TC_look_up") + 105, 1)  = 0x0,
mem(address("TC_look_up") + 106, 1)  = 0x1,
mem(address("TC_look_up") + 107, 1)  = 0x0,
mem(address("TC_look_up") + 108, 1)  = 0x0,
mem(address("TC_look_up") + 109, 1)  = 0x0,
mem(address("TC_look_up") + 110, 1)  = 0x0,
mem(address("TC_look_up") + 111, 1)  = 0x1,
mem(address("TC_look_up") + 112, 1)  = 0x1,
mem(address("TC_look_up") + 113, 1)  = 0x1,
mem(address("TC_look_up") + 114, 1)  = 0x1,
mem(address("TC_look_up") + 115, 1)  = 0x1,
mem(address("TC_look_up") + 116, 1)  = 0x1,
mem(address("TC_look_up") + 117, 1)  = 0x0,
mem(address("TC_look_up") + 118, 1)  = 0x0,
mem(address("TC_look_up") + 119, 1)  = 0x0,
mem(address("TC_look_up") + 120, 1)  = 0x0,
mem(address("TC_look_up") + 121, 1)  = 0x0,
mem(address("TC_look_up") + 122, 1)  = 0x0,
mem(address("TC_look_up") + 123, 1)  = 0x0,
mem(address("TC_look_up") + 124, 1)  = 0x0,
mem(address("TC_look_up") + 125, 1)  = 0x0,
mem(address("TC_look_up") + 126, 1)  = 0x0,
mem(address("TC_look_up") + 127, 1)  = 0x0;
    }   }

